name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Compile and Analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud Scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Update Vulnerable Packages
        shell: powershell
        run: |
          dotnet add package System.Net.Http --version 4.3.4
          dotnet add package System.Text.Json --version 6.0.1
          dotnet add package System.Text.RegularExpressions --version 4.3.1

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          # Comienza el análisis de SonarQube
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"Jose25UPT_proyecto-si8811a-2024-ii-u2-apis-y-funciones-jarro-valle" `
            /o:"jose25upt" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.exclusions="**/*Tests.csproj" `
            /d:sonar.scanner.scanAll=false

          # Construye la solución en la raíz
          dotnet build "proyecto-si8811a-2024-ii-u1-apis-y-funciones-jarro-y-valle.sln" /t:Rebuild

          # Finaliza el análisis de SonarQube
          .\.sonar\scanner\dotnet-sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
